def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def buildVariableProperties = new Properties()
def buildVariableFile = rootProject.file('build_variable.properties')
if (buildVariableFile.exists()) {
    buildVariableFile.withReader('UTF-8') { reader ->
        buildVariableProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = buildVariableProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '10'
}

def flutterVersionName = buildVariableProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '0.0.10'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId buildVariableProperties["packageName"]
        minSdkVersion 18
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //todo fix flutter 1.12
    implementation "androidx.legacy:legacy-support-core-utils:1.0.0"
    implementation "androidx.legacy:legacy-support-core-ui:1.0.0"
    implementation "androidx.loader:loader:1.1.0"
    implementation "androidx.viewpager:viewpager:1.0.0"
    implementation "androidx.customview:customview:1.1.0-alpha01"
    implementation "androidx.arch.core:core-runtime:2.1.0"
    implementation "androidx.fragment:fragment:1.2.0-rc03"
    implementation "androidx.versionedparcelable:versionedparcelable:1.1.0"
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation "androidx.core:core:1.2.0-rc01"
    implementation "com.google.firebase:firebase-messaging:20.1.7"
}
